Defines the command line language
=========================== LANGUAGE SPECIFICATIONS =============================

Basic Syntax:
CMND [VERB] [ADJ] [NOUN] [OPTIONS...]

	Each part of the command is seperated by a space. To continue a multi-line
	command end first line with '\' and no trailing white-space.
VERBs:
	create 		[OBJ] *[{OPTs,...}]		create new object
	remove 		[OBJ]					remove object from memory
	info 		[OBJ/CMND]				Give information on object OBJ
	list 		[OPT...]				List current objects
	init  	 	[OBJ]					Populate the object
	view 		[OBJ]					Bring object into view
	dump 		[OBJ] [OPT...]			Dump info on object to designated location
										in specified format (ppm, bin, txt, etc)
	load 		[FILE]					Load a file into memory
	save 		[OBJ] [FILE]			Save object to location

VARIABLE DECLARATION: All variables will be declared with the `let` keyword. For
example:
	let x = 2
declares the variable x as an integer and assigns to it the value 2. If a 
variable has been declared then it can be modified
	let x = 4
Finally, a variable can be declared without initialization:
	let (int) x
Here we explicitly denote that x is an integer. Basic types have default values.

VARIABLE TYPES:
	int:		32 bit signed integeral type
	uint:		32 bit unsigned integral type
	int64:		
	uint64:		
	int32:		
	uint32:
	int16:
	uint16:
	
	string:		character string
	char:		a single ASCII character

	double:		

OPTIONS will be specified as a list at the end of the command. There are two
types of options: PARAMETERS and FLAGS. PARAMETERS are set as VARNAME=VALUE
whilst FLAGS are set by just calling FLAGNAME. Further, FLAGS may be set with
'TOGGLEMODE FLAGNAME', where TOGGLEMODE = {set/unset/toggle}. 

=================================================================================	
=============================== OBJECT HIERARCHY ================================
=================================================================================	

    =========================== DRAWABLE objects ============================

								FULLSCREEN
			     ___________________|______________________
			     |                                        |
	         GRAPHICAL                                   TEXT
     ___________ |_____________               ___________ |___________
	 |                        |               |                      |
  FRACTAL                 ANIMATION     PROGRAM_MANAGER          INFO_PANE








================================  IMPLEMENTED  =================================
Parts of the language that have been implemented. The first thing to do is work
on the `create` keyword and the `view` keyword. These will give the basic
functionality needed to interface with BFG.
